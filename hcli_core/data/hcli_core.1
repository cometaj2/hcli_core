.TH HCLI_CORE 1 "JUNE 2019" Linux "User Manuals"
.SH NAME
hcli_core \- An HCLI Connector that can be used to expose a REST API with a built-in CLI, via hypertext command line interface (HCLI) semantics.
.SH SYNOPSIS
.B hcli_core
[
.I option
|
.I command
]
.SH DESCRIPTION
.B hcli_core
is a Web Service Gateway Interface (WSGI; PEP 3333) application that provides a way for developers to expose a REST API as a CLI via HCLI v1.0 semantics.
This enables immediate, dynamic and up to date in-band access to man page style API/CLI documentation.
.PP
HCLI Core deploys with support for two distinct HCLI:
.PP
- The user defined Core HCLI application provided as a plugin path.
.br
- The Management HCLI application used to manage local credentials (hco, which can be interacted with using an HCLI client).
.PP
.SH CONFIGURATION
HCLI Core relies on the use of a configuration file. If none is provided as a file path, the default configuration included with hcli_core
is used.
.PP
The configuration file is expected to be formatted in the configparser format which defines sections and assigned name = value pairs. See
the EXAMPLE section for details on how to submit a custom configuration file path to hcli_core at launch.
.PP
The configuration supports enabling or disable authentication for:
.PP
- The Core HCLI application provided as a plugin path.
.br
- The Management HCLI application used to manage local credentials (hco).
.PP
.I
.SS CONFIGURATION FILE FORMAT
[default]
.br
core.auth = False
.br
mgmt.auth = True
.br
.SH AUTHENTICATION
If authentication is configured for an HCLI application, HCLI Core expects to be able to use a config and credentials file, called "credentials".
The default included credentials file provided with HCLI Core SHOULD NOT be used but is included as an example file format.
.PP
The default expected user is an admin user with '*' defaults for both the hashed password and its salt. On first startup, HCLI Core generates a random password and assigns it to the admin user. The password is displayed once in the log output and SHOULD be changed immediately for additional security.
.PP
HCLI Core can function without credentials listed in the credentials file but will complain on startup.
.PP
When the HCLI Management application's authentication is disabled, no changes are allowed via hco (the HCLI Management application)
.PP
.SS HTTP BASIC AUTHENTICATION
By default, usernames and passwords stored in the credentials file are expected to be used with HTTP Basic Authentication. Note that usernames and passwords can't contain a ":".
.PP
The credentials file MAY contain as many additional users as is desired; one user per uniquely named section.
.PP
HTTP Basic Authenthentication SHOULD NOT be used without HTTPS and SHOULD NOT generally be considered secure. This is provided as a bare convenience if authentication capabilities are found useful.
.I However, its use SHOULD remain limited and other authorization schemes should be preferred.
.PP
.SS CREDENTIALS FILE FORMAT
[default]
.br
username = admin
.br
password = *
.br
salt = *
.PP
[<someothersection>]
.br
username = <someotheruser>
.br
password = <hashed password>
.br
salt = <salt>
.PP
.SH COMMANDS
.IP "path"
Provides the installation path of hcli_core, which can be used to help locate the path of the WSGI app to use in a WSGI server.
.IP "sample hub"
Provides the path of a sample HCLI that can be used for service discovery.
.IP "sample hfm"
Provides the path of a sample HCLI that can be used to stream upload, download and otherwise remotely manage files.
.IP "sample nw"
Provides the path of a sample HCLI that can be used as an IPAM to manage private network CIDR ranges.
.IP "sample hptt"
Provides the path of a sample HCLI that can be used to manage PTT streaming channels to link disjointed radio networks.
.IP help
This help file.
.SH OPTIONS
.IP --version
.B hcli_core
version and the version of it's dependencies.
.SH EXAMPLE
hcli_core path
.PP
hcli_core --version
.PP
gunicorn --workers=5 --threads=2 "hcli_core:connector()"
.PP
gunicorn --workers=5 --threads=2 "hcli_core:connector(\\"`hcli_core sample hfm`\\")"
.PP
gunicorn --workers=5 --threads=2 "hcli_core:connector(plugin_path=\\"`hcli_core sample hfm`\\", config_path=\\"./custom.config\\")"
.PP
gunicorn --workers=1 --threads=10 -b 0.0.0.0:8000 -b 0.0.0.0:9000 "hcli_core:connector()"
.PP
pip install huckle
.PP
huckle cli install localhost:9000
.PP
hco help
